# -*- coding: utf-8 -*-
"""Week-1 report

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gdGjf4IKPOZsQ7HwalNAV_-NBAkPc_HC

**Prediction of Agriculture Crop Production in India**
"""

import pandas as pd
df=pd.read_csv('/content/datafile (1).csv')

df.head()

df.describe()

import numpy as np
import pandas as pd
import matplotlib
import matplotlib.pyplot as plt
import plotly.express as px
import seaborn as sns

df.columns

df.info()

df.nunique()

df.dropna(inplace = True)

df.isnull().sum()

df.plot()
plt.show()

temp = df.groupby(by='Crop')['State'].sum().reset_index().sort_values(by='State')
px.bar(temp.tail(), 'Crop', 'State')

temp = df.groupby(by='Crop')['Cost of Cultivation (`/Hectare) C2'].sum().reset_index()
px.line(temp, 'Crop', 'Cost of Cultivation (`/Hectare) C2')

#Average Crop Area through years
temp = df.groupby(by='Crop')['Cost of Production (`/Quintal) C2'].mean().reset_index()
px.scatter(temp, 'Crop', 'Cost of Production (`/Quintal) C2', color='Cost of Production (`/Quintal) C2', size='Cost of Production (`/Quintal) C2')

"""**Forecasting of Smart city traffic patterns:**"""

df=pd.read_csv('/content/datasets_8494_11879_test_BdBKkAj.csv')

df.head()

df.columns

df.describe()

import numpy as np
import pandas as pd
from subprocess import check_output
print(check_output(["ls", "/content/datasets_8494_11879_test_BdBKkAj.csv"]).decode("utf8"))

def datetounix(df):
  unixtime = []
  for date in df['DateTime']:
    unixtime.append(time.mktime(date.timetuple()))
  df['DateTime'] = unixtime
  return(df)

import os
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from datetime import datetime
import time
from sklearn.ensemble import ExtraTreesClassifier
import operator
from sklearn.tree import DecisionTreeClassifier
from sklearn.preprocessing import StandardScaler

df_train = pd.read_csv('/content/datasets_8494_11879_test_BdBKkAj.csv', encoding='ISO-8859-1', engine='c')
df_test = pd.read_csv('/content/datasets_8494_11879_test_BdBKkAj.csv', encoding='ISO-8859-1', engine='c')
df_test.info()

df_train['DateTime'] = pd.to_datetime(df_train['DateTime'])
df_test['DateTime'] = pd.to_datetime(df_test['DateTime'])
df_test.info()

data = df_train.Junction
binwidth = 1
plt.hist(data, bins=range(min(data), max(data) + binwidth, binwidth), log=False)
plt.title("Gaussian Histogram")
plt.xlabel("Traffic")
plt.ylabel("Number of times")
plt.show()